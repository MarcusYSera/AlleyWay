{"version":3,"file":"GameLayout-YG_Yjapw.js","sources":["../../../../components/GameLayout.vue"],"sourcesContent":["<template>\n  <div id=\"game-canvas\" tabindex=\"0\" @keydown.prevent=\"handleKeyDown\">\n    <div id=\"paddle\" :style=\"{ transform: 'translateX(' + paddlePosition + 'px)' }\"></div>\n    <div id=\"ball\" :style=\"{ transform: 'translate(' + ballX + 'px, ' + ballY + 'px)' }\"></div>\n    <!-- Generate breakable bricks -->\n    <div v-for=\"(row, rowIndex) in bricks\" :key=\"rowIndex\" class=\"brick-row\">\n      <div v-for=\"(brick, brickIndex) in row\" :key=\"brickIndex\" :class=\"{ 'brick': true, 'brick-hidden': !brick }\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'GameLayout',\n  data() {\n    return {\n      bricks: [], // Array to store breakable bricks\n      numRows: 20,\n      numCols: 9,\n      paddlePosition: 180,\n      ballX: 195, // Initial X position of the ball\n      ballY: 400, // Initial Y position of the ball\n      ballSpeedX: (Math.random() < 0.5 ? 1 : -1) * (Math.random() + 0.5), // Random angle adjustment\n      ballSpeedY: 0.75, // Vertical velocity of the ball\n      canvasWidth: 400, // Width of the game canvas\n      canvasHeight: 600, // Height of the game canvas\n      ballSize: 8, // Size of the ball\n      paddleWidth: 31.81, // Width of the paddle\n      paddleHeight: 7.1, // Height of the paddle\n      gamePaused: false, // Flag to track the game's pause state\n      brickWidth: 31.82,\n      brickHeight: 7.09,\n      bricksToRemove: new Set(), // Set to store positions of bricks to remove\n    }\n  },\n  mounted() {\n    this.generateBricks();\n    this.gameLoop();\n  },\n  beforeDestroy() {\n    // Remove event listener when the component is destroyed\n  },\n  methods: {\n    resetBricks() {\n      // Clear the current bricks array\n      this.bricks = [];\n      this.paddlePosition = 180;\n      this.ballX = 195;\n      this.ballY = 400;\n      this.ballSpeedX = (Math.random() < 0.5 ? 1 : -1) * (Math.random() + 0.5);\n      this.ballSpeedY = 0.75;\n      // Generate new bricks\n      this.generateBricks();\n    },\n    removeBricks() {\n      // Remove marked bricks from the bricks array\n      this.bricksToRemove.forEach(pos => {\n        const [row, col] = pos.split(',').map(Number);\n        this.bricks[row][col] = false;\n      });\n      // Clear the set for the next frame\n      this.bricksToRemove.clear();\n    },\n    checkBrickCollisions() {\n      for (let row = 0; row < this.numRows; row++) {\n        for (let col = 0; col < this.numCols; col++) {\n          if (this.bricks[row][col]) {\n            const brickX = col * this.brickWidth + col * 5 + this.brickWidth;\n            const brickY = row * this.brickHeight + row * 5;\n\n            if (\n              this.ballX + this.ballSize >= brickX &&\n              this.ballX <= brickX + this.brickWidth &&\n              this.ballY + this.ballSize >= brickY &&\n              this.ballY <= brickY + this.brickHeight\n            ) {\n              // Mark brick for removal\n              this.bricksToRemove.add(`${row},${col}`);\n              this.ballSpeedY *= -1;\n            }\n          }\n        }\n      }\n    },\n    checkPaddleCollision() {\n      // Check for collision with the paddle\n      if (\n        this.ballX + this.ballSize >= this.paddlePosition &&\n        this.ballX <= this.paddlePosition + this.paddleWidth &&\n        this.ballY + this.ballSize >= this.canvasHeight - this.paddleHeight - 24\n      ) {\n        // Reverse vertical velocity to bounce off paddle\n        this.ballSpeedY *= -1;\n      }\n    },\n    checkCanvasEdgeCollision() {\n      // Check for collisions with canvas edges\n      if (this.ballX <= 0 || this.ballX + this.ballSize >= this.canvasWidth) {\n        this.ballSpeedX *= -1; // Reverse horizontal velocity\n      }\n      if (this.ballY <= 0) {\n        this.ballSpeedY *= -1; // Reverse vertical velocity\n      }\n      if (this.ballY + this.ballSize >= this.canvasHeight) this.resetBricks();\n    },\n    generateBricks() {\n      for (let row = 0; row < this.numRows; row++) {\n        const rowArray = [];\n        for (let col = 0; col < this.numCols; col++) {\n          // Generate random boolean value to represent whether the space is filled or not\n          if (row === 0) {\n            rowArray.push(false); // Top row should not be filled\n          } else {\n            rowArray.push(Math.random() < 0.5); // Adjust probability as needed for other rows\n          }\n        }\n        this.bricks.push(rowArray);\n      }\n    },\n    gameLoop() {\n      if (!this.gamePaused) {\n        // Update ball position\n        this.ballX += this.ballSpeedX;\n        this.ballY += this.ballSpeedY;\n\n        this.checkCanvasEdgeCollision();\n        this.checkPaddleCollision();\n        this.checkBrickCollisions();\n        this.removeBricks();\n\n        // Check if the ball hits the bottom of the screen\n        if (this.ballY + this.ballSize >= this.canvasHeight) {\n          // Pause the game or implement game over logic\n          this.gamePaused = true;\n          // Reset ball position and velocities (optional)\n          // this.ballX = initialX;\n          // this.ballY = initialY;\n          // this.ballSpeedX = initialSpeedX;\n          // this.ballSpeedY = initialSpeedY;\n        }\n\n        // Confine ball within canvas boundaries\n        this.ballX = Math.max(0, Math.min(this.canvasWidth - this.ballSize, this.ballX));\n        this.ballY = Math.max(0, Math.min(this.canvasHeight - this.ballSize, this.ballY));\n      }\n\n      // Request animation frame for the next frame\n      requestAnimationFrame(this.gameLoop);\n    },\n    handleKeyDown(event) {\n      if (event.key === ' ') { // Spacebar key\n        // Pause/unpause the game\n        this.gamePaused = !this.gamePaused;\n      } else if (event.key === 'ArrowLeft' && this.paddlePosition > 0) {\n        // Move the paddle left\n        this.paddlePosition -= 10;\n      } else if (event.key === 'ArrowRight' && this.paddlePosition < 370) {\n        // Move the paddle right\n        this.paddlePosition += 10;\n      } else if (event.key === 'r') {\n        // Reset the bricks\n        this.resetBricks();\n      }\n    }\n  },\n}\n</script>\n\n<style scoped>\n#game-canvas {\n  display: grid;\n  grid-template-columns: repeat(11, 1fr);\n  grid-template-rows: repeat(50, 1fr);\n  gap: 5px;\n  width: 400px;\n  height: 600px;\n  background-color: #222;\n  border: 2px solid #fff;\n  position: relative;\n}\n\n[id=\"ball\"] {\n  background-color: greenyellow;\n  width: 2%;\n  height: 1.25%;\n  border-radius: 50%;\n  margin: auto;\n  position: absolute;\n}\n\n#paddle {\n  grid-row: 48/49;\n  /* left: 50%; /* Center paddle horizontally */\n  /* transform-origin: center; */\n  /* grid-column: 6 / 7; */\n  /* Adjust to center the paddle */\n  width: 100%;\n  height: 100%;\n  background-color: #fff;\n  position: relative;\n}\n\n.brick-row {\n  display: flex;\n  flex-direction: row;\n  gap: 5px;\n  grid-column: 2 / 11;\n}\n\n.brick {\n  flex: 1;\n  height: 100%;\n  grid-column: auto;\n  grid-row: auto;\n  background-color: #f00;\n}\n\n.brick-hidden {\n  background-color: #222;\n  /* Brick color when hidden */\n}\n</style>\n"],"names":["_ssrRenderAttrs","_mergeProps","_ssrRenderStyle","_ssrRenderList","_ssrRenderClass"],"mappings":"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"}